// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package confproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestInfo struct {
	Team1                string   `protobuf:"bytes,1,opt,name=team1,proto3" json:"team1,omitempty"`
	Team2                string   `protobuf:"bytes,2,opt,name=team2,proto3" json:"team2,omitempty"`
	Score                string   `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
	Phase                string   `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestInfo) Reset()         { *m = RequestInfo{} }
func (m *RequestInfo) String() string { return proto.CompactTextString(m) }
func (*RequestInfo) ProtoMessage()    {}
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *RequestInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestInfo.Unmarshal(m, b)
}
func (m *RequestInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestInfo.Marshal(b, m, deterministic)
}
func (m *RequestInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestInfo.Merge(m, src)
}
func (m *RequestInfo) XXX_Size() int {
	return xxx_messageInfo_RequestInfo.Size(m)
}
func (m *RequestInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RequestInfo proto.InternalMessageInfo

func (m *RequestInfo) GetTeam1() string {
	if m != nil {
		return m.Team1
	}
	return ""
}

func (m *RequestInfo) GetTeam2() string {
	if m != nil {
		return m.Team2
	}
	return ""
}

func (m *RequestInfo) GetScore() string {
	if m != nil {
		return m.Score
	}
	return ""
}

func (m *RequestInfo) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

type ReplyInfo struct {
	Info                 string   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyInfo) Reset()         { *m = ReplyInfo{} }
func (m *ReplyInfo) String() string { return proto.CompactTextString(m) }
func (*ReplyInfo) ProtoMessage()    {}
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *ReplyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyInfo.Unmarshal(m, b)
}
func (m *ReplyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyInfo.Marshal(b, m, deterministic)
}
func (m *ReplyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyInfo.Merge(m, src)
}
func (m *ReplyInfo) XXX_Size() int {
	return xxx_messageInfo_ReplyInfo.Size(m)
}
func (m *ReplyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyInfo proto.InternalMessageInfo

func (m *ReplyInfo) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestInfo)(nil), "confproto.requestInfo")
	proto.RegisterType((*ReplyInfo)(nil), "confproto.replyInfo")
}

func init() {
	proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4)
}

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0x4b,
	0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xf1, 0xc0, 0x4c, 0xa5, 0x54,
	0x2e, 0xee, 0xa2, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0xcf, 0xbc, 0xb4, 0x7c, 0x21, 0x11, 0x2e,
	0xd6, 0x92, 0xd4, 0xc4, 0x5c, 0x43, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x07, 0x26,
	0x6a, 0x24, 0xc1, 0x84, 0x10, 0x35, 0x02, 0x89, 0x16, 0x27, 0xe7, 0x17, 0xa5, 0x4a, 0x30, 0x43,
	0x44, 0xc1, 0x1c, 0x90, 0x68, 0x41, 0x46, 0x62, 0x71, 0xaa, 0x04, 0x0b, 0x44, 0x14, 0xcc, 0x51,
	0x92, 0xe7, 0xe2, 0x2c, 0x4a, 0x2d, 0xc8, 0xa9, 0x04, 0x5b, 0x22, 0xc4, 0xc5, 0x92, 0x99, 0x97,
	0x96, 0x0f, 0xb5, 0x03, 0xcc, 0x36, 0x72, 0xe7, 0x62, 0x4f, 0x4f, 0x85, 0xb8, 0xc1, 0x86, 0x8b,
	0xab, 0x28, 0xb5, 0xa4, 0xb4, 0x28, 0x0f, 0xcc, 0x13, 0xd3, 0x83, 0x3b, 0x56, 0x0f, 0xc9, 0xa5,
	0x52, 0x22, 0x28, 0xe2, 0x50, 0xa3, 0x95, 0x18, 0x9c, 0xb8, 0xa3, 0x10, 0xbe, 0x4b, 0x62, 0x03,
	0x53, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0xbc, 0x41, 0xf3, 0xff, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GetInfoClient is the client API for GetInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetInfoClient interface {
	ReturnInfo(ctx context.Context, in *RequestInfo, opts ...grpc.CallOption) (*ReplyInfo, error)
}

type getInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewGetInfoClient(cc grpc.ClientConnInterface) GetInfoClient {
	return &getInfoClient{cc}
}

func (c *getInfoClient) ReturnInfo(ctx context.Context, in *RequestInfo, opts ...grpc.CallOption) (*ReplyInfo, error) {
	out := new(ReplyInfo)
	err := c.cc.Invoke(ctx, "/confproto.getInfo/returnInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetInfoServer is the server API for GetInfo service.
type GetInfoServer interface {
	ReturnInfo(context.Context, *RequestInfo) (*ReplyInfo, error)
}

// UnimplementedGetInfoServer can be embedded to have forward compatible implementations.
type UnimplementedGetInfoServer struct {
}

func (*UnimplementedGetInfoServer) ReturnInfo(ctx context.Context, req *RequestInfo) (*ReplyInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnInfo not implemented")
}

func RegisterGetInfoServer(s *grpc.Server, srv GetInfoServer) {
	s.RegisterService(&_GetInfo_serviceDesc, srv)
}

func _GetInfo_ReturnInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetInfoServer).ReturnInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/confproto.getInfo/ReturnInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetInfoServer).ReturnInfo(ctx, req.(*RequestInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "confproto.getInfo",
	HandlerType: (*GetInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "returnInfo",
			Handler:    _GetInfo_ReturnInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config.proto",
}
